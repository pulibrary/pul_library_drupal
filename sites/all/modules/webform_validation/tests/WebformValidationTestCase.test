<?php

/**
 * @file
 * Test Webform Validation module.
 */
class WebformValidationTestCase extends WebformTestCase {
  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => t('Webform Validation'),
      'description' => t('Test Webform Validation module.'),
      'group' => t('Webform'),
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp($added_modules = array()) {
    $modules = array('webform_validation');
    parent::setUp(array_merge($modules, $added_modules));
  }

  /**
   * The tests.
   */
  public function test() {
    // Create test Webform.
    $node = $this->webformForm();

    // Test access to "Form validation" tab.
    $this->drupalLogin($this->webform_users['userAccess']);
    $this->drupalGet('node/' . $node->nid . '/webform/validation');
    $this->assertResponse(403, 'Authenticated user does not have access to "Form validation" tab');

    $this->drupalLogin($this->webform_users['admin']);
    $this->drupalGet('node/' . $node->nid . '/webform/validation');
    $this->assertResponse(200, 'Webform admin user has access to "Form validation" tab');
    $this->assertTitle('Test Webform | Drupal');
    $this->assertText('Add a validation rule');
    $this->assertText('No validation rules available.');

    // Test rule creation.
    $this->clickLink('Minimum length');
    $this->assertTitle('Add validation | Drupal');
    $values = array(
      'rulename' => $this->randomString(),
      'rule_components[21]' => TRUE,
      'data' => 2,
    );
    $this->drupalPost(NULL, $values, t('Add rule'));
    $this->assertText(htmlspecialchars($values['rulename'], ENT_QUOTES), 'Rule name appears on page.');
  }

}
