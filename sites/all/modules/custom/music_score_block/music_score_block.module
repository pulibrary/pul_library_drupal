<?php


function music_score_block_form($form, &$form_state) {

  $form = array();
  $path = $_GET['q'];

  $form['query'] = array (
    '#type'  => 'textfield',
    '#title' =>  t('Search Music Scores'),
    '#size'  => 80,
    '#default_value' => t('Search music in score format.'),
    '#attributes' => array(
        'placeholder' => t('Search music in score format.'),
    )
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
   );
   $form['sid'] = array(
     '#type' => 'hidden',
     '#value' => t("library-core"),
   );
    $form['#attached']['js'][] = drupal_get_path('module', 'music_score_block') .'/music_score_block.js';
    $hint_settings = array('music_score_search_hint' => variable_get('music_score_search_hint'),
                           'music_score_search_error' => variable_get('music_score_search_error')
                           );
    $form['#attached']['js'][] = array(
      'data' => array('music_score_block' => $hint_settings),
      'type' => 'setting',
     );
   $form['#action'] = url('/utils/search/mscores', array('external' => true));
   $form['#target'] = "_parent";
   $form['#method'] = "get";
   $form['#suffix'] = '<div class="homepage-tab-form-message"><a title="Go to the Catalog" href="https://catalog.princeton.edu/">Catalog</a> <a title="Go to the Books+ Advanced Search Page" href="https://princeton-primo.hosted.exlibrisgroup.com/primo_library/libweb/action/search.do?mode=Advanced&vid=PRINCETON">Books+</a> <a title="Go to the Articles+ Advanced Search Page" href="https://princeton.summon.serialssolutions.com/advanced#!/advanced">Articles+</a></div>';
   return $form;

}

function music_score_block_form_validate($form, &$form_state) {
  $term = $form_state['values']['query'];
  if($term == "" || $term == variable_get('music_score_search_hint')) {
    form_set_error('term', t('Enter Search Terms'));
  }
}


function music_score_block_contents() {
  return drupal_get_form('music_score_block_form'); // must define a function
}

function music_score_block_get_current_filter($path) {
    $path_parts = explode("find/all/", $path);
    if(isset($path_parts[1])) {
        return filter_xss($path_parts[1]);
        return $path_parts[1];
    }
}

function music_score_block_query_escape($drupal_path) {
  $query = music_score_block_get_current_filter($drupal_path);
  return drupal_encode_path($query);
}

function  music_score_block_get_sid() {
    return "library-main";
}

function music_score_search_results_content() {
  $path = music_score_block_query_escape($_GET['q']);
  $sid = music_score_block_get_sid();
  $ajax_spinner = "<div id='catalog-search-results-spinner' class='results-spinner-large'><i class='icon-spinner icon-spin icon-refresh'></i></div>";
  $block_content = array(
    '#markup' => "<div data-source='/utils/find/any?query={$path}&sid={$sid}' id='catalog-search-results'>" . $ajax_spinner . t('') . "</div>",
  );
  return $block_content;
}


/**
 * Implements hook_menu().
 *
 * Provides a default page to explain what this module does.
 *
function music_score_block_menu() {
  $items['music_score_block'] = array(
    'page callback' => 'music_score_block_page',
    'access callback' => TRUE,
    'title' => 'Music Score Search',
  );
  return $items;
}
*/
/**
 * Implements hook_page()
 *
 */

function music_score_block_page() {

  $page = array(
    '#type' => 'markup',
    '#markup' => t('Configure The Books+ Search Box <a href="@url">the block admin page</a>.', array('@url' => url('admin/structure/block'))),
  );

  return $page;
}


/**
 * Implements hook_block_info()
 *
 */

function music_score_block_block_info() {

  $blocks['music_score_search'] = array(
      // info: The name of the block.
      'info' => t('Music Score Search'),
      // Block caching options (per role, per user, etc.)
      'cache' => DRUPAL_CACHE_PER_PAGE, // default
      'visibility' => BLOCK_VISIBILITY_LISTED,
   );
   $blocks['music_score_search_results'] = array(
      // block for search results from "books+" aka primo
      'info' => t('Music Score Search Results'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
   );
   return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function music_score_block_block_configure($delta = '') {

  $form = array();
  if ($delta == 'music_score_search') { //in this case the delta is the name of block

    $form['music_score_search_hint'] = array(
      '#type' => 'textfield',
      '#title' => t('Search Box Hint Text'),
      '#size' => 60,
      '#description' => t('This text will appear as the hint when catalog search box is displayed.'),
      '#default_value' => variable_get('music_score_search_hint',  t('Hint you want to display.')),
    );
    $form['music_score_search_error'] = array(
      '#type' => 'textfield',
      '#title' => t('Invalid Search Error'),
      '#size' => 60,
      '#description' => t('This message will display when the user submits and empty search for the Music Score Block.'),
      '#default_value' => variable_get('music_score_search_error',  t('Supply a search term.')),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Make sure we can save the block
 */
function music_score_block_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'music_score_search') {
    // Have Drupal save the string to the database.
    variable_set('music_score_search_hint', $edit['music_score_search_hint']);
    variable_set('music_score_search_error', $edit['music_score_search_error']);
  }

  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function music_score_block_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.

  if ($delta == 'music_score_search') {
    $block['subject'] = t('Music Score Search');
    $block['content'] = music_score_block_contents($delta);

  } elseif ($delta == 'music_score_search_results') {
    $block['subject'] = t('Music Score Search Results');
    $block['content'] = music_score_search_results_content($delta);
    drupal_add_js(array('music_score_block' => array('request' => 'query')), 'setting');
    drupal_add_js(drupal_get_path('module', 'music_score_block') .'/music_score_search_results.js');
  }
  return $block;
}
