<?php
function allsearch_block_get_current_filter($path) {
  $path_parts = explode("find/all/", $path);
  if(isset($path_parts[1])) {
    return filter_xss($path_parts[1]);
  }
}

function allsearch_block_form($form, &$form_state) {
  $page = $_GET['q'];
  $path = allsearch_block_get_current_filter($page);
  if(isset($path)) {
    $default_value = htmlspecialchars_decode($path); //FIXME
  } else {
    $default_value = variable_get('all_search_hint');
  }
  $form = array();
  if($page != "node/1") {
    //$prefix = "<div class='all-search-form-header'><h1 class='all-search-title'>Search All</h1></div>";
    $prefix = "";
    $suffix = "<div class='all-search-form-suffix'><a title='What is the all search?' href='/faq/all-search'>What is the all search?</a>";
  } else {
    $prefix = "";
    $suffix = '<div class="homepage-tab-form-message"><a onclick="_gaq.push([\'_trackEvent\', \'Tab Link\', \'Main Catalog\', \'All Tab\']);" title="Go to the Main Catalog" href="http://catalog.princeton.edu/">Main Catalog</a></div>';
  }


  $form['query'] = array (
    '#type'  => 'textfield',
    '#title' =>  t('All Search'),
    '#size'  => 80,
    '#required' => TRUE,
    '#default_value' => $default_value
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
   );
    $form['#attached']['js'][] = drupal_get_path('module', 'allsearch_block') .'/allsearch_block.js'; 
    $hint_settings = array('all_search_hint' => variable_get('all_search_hint'),
                           'all_search_error' => variable_get('all_search_error')
                           );   
    $form['#attached']['js'][] = array(
      'data' => array('allsearch_block' => $hint_settings),
      'type' => 'setting',
     );
   //$form['#validate'] = array('allsearch_block_form_validate');
   $form['#prefix'] = $prefix;
   $form['#suffix'] = $suffix;
   //$form['#redirect'] = url('find/all/');
   #$form['#target'] = "_parent";
   //$form['#action'] = url('/find/all/cats');
   $form['#method'] = "post";
   $form['#submit'] = array('allsearch_block_form_redirect');
   return $form;

}

function allsearch_block_form_redirect($form, &$form_state) {
  $form_state['redirect'] = 'find/all/' . $form_state['values']['query'];
}

function allsearch_block_form_validate($form, &$form_state) {
  
  $term = $form_state['values']['query'];
  if($term == "" || $term == variable_get('all_search_hint')) {

    form_set_error('term', t('What do you want to search for?'));
  } 
}



function allsearch_block_form_submit($form, &$form_state) {
  //drupal_set_message(t('Submitting values: @values', array('@values' => var_export($form_state['values'], TRUE))));
  //print_r(&$form_state);
}

function allsearch_block_contents() {
  return drupal_get_form('allsearch_block_form'); // must define a function 
}




/**
 * Implements hook_menu().
 *
 * Provides a default page to explain what this module does.

function allsearch_block_menu() {
  $items['allsearch_block'] = array(
    'page callback' => 'allsearch_block_page',
    'access callback' => TRUE,
    'title' => 'Catalog Search',
  );
  return $items;
}
*/
/**
 * Implements hook_page()
 * 
 */
 
function allsearch_block_page() {
    
  $page = array(
    '#type' => 'markup',
    '#markup' => t('Configure The All Search Box <a href="@url">the block admin page</a>.', array('@url' => url('admin/structure/block'))),
  );
    
  return $page;
}


/**
 * Implements hook_block_info()
 * 
 */

function allsearch_block_block_info() {
  
  $blocks['allsearch_search'] = array(
      // info: The name of the block.
      'info' => t('All Search'),
      // Block caching options (per role, per user, etc.)
      'cache' => DRUPAL_CACHE_PER_PAGE, //DRUPAL_CACHE_PER_ROLE, // default
      'visibility' => BLOCK_VISIBILITY_LISTED,
   );
   
   return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function allsearch_block_block_configure($delta = '') {
 
  $form = array();
  if ($delta == 'allsearch_search') { //in this case the delta is the name of block

    $form['all_search_hint'] = array(
      '#type' => 'textfield',
      '#title' => t('Search Box Box Hint Text'),
      '#size' => 60,
      '#description' => t('This text will appear as the hint when catalog search box is displayed.'),
      '#default_value' => variable_get('all_search_hint',  t('Hint you want to display.')),
    );
    $form['all_search_error'] = array(
      '#type' => 'textfield',
      '#title' => t('Empty Search Error Message'),
      '#size' => 60,
      '#description' => t('This text will appear as the error menssage when a user supplies and empty search.'),
      '#default_value' => variable_get('all_search_error',  t('Message you want to display when user submits an empty search.')),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Make sure we can save the block 
 */
function allsearch_block_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'allsearch_search') {
    // Have Drupal save the string to the database.
    variable_set('all_search_hint', $edit['all_search_hint']);
    variable_set('all_search_error', $edit['all_search_error']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function allsearch_block_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  if ($delta == 'allsearch_search') {
  
    $block['subject'] = t('All Search');
    $block['content'] = allsearch_block_contents($delta);
  }
 
  return $block;
}




