<?php


function summon_block_form($form, &$form_state) {
    
  $form = array();
  $path = $_GET['q'];
  if(drupal_is_front_page()) { // should keyed off <front>
    $form_suffix = '<div class="homepage-tab-form-message"><a onclick="_gaq.push([\'_trackEvent\', \'Tab Link\', \'E-Journal A to Z\', \'Articles+ Tab\']);" href="http://sfx.princeton.edu:9003/sfx_pul/az">E-Journals</a> | <a onclick="_gaq.push([\'_trackEvent\', \'Tab Link\', \'Advanced Search\', \'Articles+ Tab\']);" href="http://princeton.summon.serialssolutions.com/advanced">Advanced Search</a></div>';
  } else {
    $form_suffix = "";
  }  
  $form['query'] = array (
    '#type'  => 'textfield',
    '#title' =>  t('Search Articles'),
    '#size'  => 80,
    '#default_value' => variable_get('summon_search_hint'),
    '#attributes' => array(
        'placeholder' => variable_get('summon_search_hint'),
    )
  );
  $form['#attached']['js'][] = drupal_get_path('module', 'summon_block') .'/summon_block.js'; 
  $hint_settings = array('summon_search_hint' => variable_get('summon_search_hint'),
                          'summon_search_error' => variable_get('summon_search_error')
                          );   
  $form['#attached']['js'][] = array(
      'data' => array('summon_block' => $hint_settings),
      'type' => 'setting',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
   );
   $form['sid'] = array(
     '#type' => 'hidden',
     '#value' => t("library-core"),
   );
   $form['#action'] = url('/searchit/search/summon', array('external' => true));
   $form['#target'] = "_parent";
   $form['#method'] = "get";
   $form['#suffix'] = $form_suffix;
   return $form;

}


function summon_block_contents() {
  return drupal_get_form('summon_block_form'); // must define a function 
}

function summon_block_query_escape($drupal_path) {
  $query = summon_block_get_current_filter($drupal_path);
  return drupal_encode_path($query);
}


function summon_block_get_current_filter($path) {
  if (preg_match('/^research\/databases\/search\//', $path)) {
    $path_parts = explode("research/databases/search", $path);
  } else {
    $path_parts = explode("find/all/", $path);
  }
  if(isset($path_parts[1])) {
    return filter_xss($path_parts[1]);
  }
}

/*
 * Add an Source ID (SID) value to tell the target app where the query came from
 */
function summon_block_get_sid() {
    return "library-main-summon";
}

function summon_search_results_content() {
  $path = summon_block_query_escape($_GET['q']);
  //print_r(drupal_parse_url($path));
  $sid = summon_block_get_sid();
  $ajax_spinner = "<div id='summon-search-results-spinner' class='results-spinner-large'><i class='icon-spinner icon-spin icon-refresh'></i></div>";
  $block_content = array(
    '#markup' => "<div id='summon-search-results' data-source='/searchit/articles/any?query={$path}&sid={$sid}'>" . $ajax_spinner . t('') . "</div>",
  ); 
  return $block_content;
}

function summon_search_guide_content() {
  $path = summon_block_query_escape($_GET['q']);
  $sid = summon_block_get_sid();
  $ajax_spinner = "<div id='guide-search-results-spinner' class='results-spinner-large'><i class='icon-spinner icon-spin icon-refresh'></i></div>";
  $block_content = array(
    '#markup' => "<div id='summon-guide-results' data-source='/searchit/articles/guide?query={$path}&number=3&sid={$sid}'>" . $ajax_spinner . t('') . "</div>",
  ); 
  return $block_content;
}

function summon_search_recommendations_content() {
  $path = summon_block_query_escape($_GET['q']);
  $sid = summon_block_get_sid();
  $block_content = array(
    '#markup' => "<div id='summon-recommendation-results' data-source='/searchit/articles/recommendations?query={$path}&sid={$sid}'>" . t('') . "</div>",
  ); 
  return $block_content;
}

function summon_search_spelling_suggestions_content() {
  $path = summon_block_query_escape($_GET['q']);
  $sid = summon_block_get_sid();
  $block_content = array(
    '#markup' => "<div id='summon-spelling-results' data-source='/searchit/articles/spelling?query={$path}&number=3&sid={$sid}'>" . t('') . "</div>",
  ); 
  return $block_content;
}


/**
 * Implements hook_menu().
 *
 * Provides a default page to explain what this module does.
 *
function summon_block_menu() {
  $items['summon_block'] = array(
    'page callback' => 'summon_block_page',
    'access callback' => TRUE,
    'title' => 'Summon Search',
  );
  return $items;
}
*/
/**
 * Implements hook_page()
 * 
 */
 
function summon_block_page() {
    
  $page = array(
    '#type' => 'markup',
    '#markup' => t('Configure The Summon+ Search Box <a href="@url">the block admin page</a>.', array('@url' => url('admin/structure/block'))),
  );
    
  return $page;
}


/**
 * Implements hook_block_info()
 * 
 */

function summon_block_block_info() {
  
  $blocks['summon_search'] = array(
      // info: The name of the block.
      'info' => t('Articles+ Search'),
      // Block caching options (per role, per user, etc.)
      'cache' => DRUPAL_CACHE_PER_PAGE, // default
      'visibility' => BLOCK_VISIBILITY_LISTED,
   );
   
  $blocks['summon_search_results'] = array(
    'info' => t('Articles+ Search Results'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['summon_guide_results'] = array(
    'info' => t('Library Guide Results'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['summon_recommendation_results'] = array(
    'info' => t('Database Recommendations'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  $blocks['summon_spelling_suggestion'] = array(
    'info' => t('Did You Mean?'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function summon_block_block_configure($delta = '') {
 
  $form = array();
  if ($delta == 'summon_search') { //in this case the delta is the name of block

    $form['summon_search_hint'] = array(
      '#type' => 'textfield',
      '#title' => t('Articles+ Search Hint'),
      '#size' => 60,
      '#description' => t('This text will appear as the hint when the Articles+ (Summon) box is displayed.'),
      '#default_value' => variable_get('summon_search_hint',  t('Hint you want to display.')),
    );
    $form['summon_search_error'] = array(
      '#type' => 'textfield',
      '#title' => t('Articles+ Search Error Message'),
      '#size' => 60,
      '#description' => t('This text will appear as the warning message when an invalid Articles+ (Summon) box is displayed.'),
      '#default_value' => variable_get('summon_search_error',  t('Please Supply an Articles+ Search Term.')),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Make sure we can save the block 
 */
function summon_block_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'summon_search') {
    // Have Drupal save the string to the database.
    variable_set('summon_search_hint', $edit['summon_search_hint']);
    variable_set('summon_search_error', $edit['summon_search_error']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function summon_block_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  if ($delta == 'summon_search') {
    $block['subject'] = t('Articles Search');
    $block['content'] = summon_block_contents($delta);
    //drupal_add_js(array('summon_block' => array('summon_search_hint' => variable_get('summon_search_hint'))), 'setting');
    //drupal_add_js(drupal_get_path('module', 'summon_block') .'/summon_block.js');
  } elseif ($delta == 'summon_search_results') {
    $block['subject'] = t('Articles+ Search Results');
    $block['content'] = summon_search_results_content($delta);
    drupal_add_js(drupal_get_path('module', 'summon_block') .'/summon_search_results.js');  
  } elseif ($delta == 'summon_guide_results') {
    $block['subject'] = t('Library Guides');
    $block['content'] = summon_search_guide_content($delta);
    drupal_add_js(drupal_get_path('module', 'summon_block') .'/summon_guide_results.js');  
  } elseif ($delta == 'summon_recommendation_results') {
    $block['subject'] = t('Database Recommendations');
    $block['content'] = summon_search_recommendations_content($delta);
    drupal_add_js(drupal_get_path('module', 'summon_block') .'/summon_recommendation_results.js');  
  } elseif ($delta == 'summon_spelling_suggestion') {
    $block['subject'] = t('Spelling Suggestions');
    $block['content'] = summon_search_spelling_suggestions_content($delta);
    drupal_add_js(drupal_get_path('module', 'summon_block') .'/summon_spelling_suggestion.js');  
  } 
  return $block;
}



