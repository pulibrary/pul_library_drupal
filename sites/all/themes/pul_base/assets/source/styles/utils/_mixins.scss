// Vertical centering
// Usage: @include vertical-align();

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

// Clearfix
// Usage: @include clearfix;

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

// Hide content visually. still visible to screen readers
// @include visually-hidden;

@mixin visually-hidden {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Hide visually and hide from screen reader
// @include hidden;

@mixin hidden {
  display: none;
  visibility: hidden;
}

// PUL Icons
@mixin pul-icon {
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-family: "pul-icons";
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  speak: none;
  text-transform: none;
}

// Word wrap
@mixin word-wrap {
  hyphens: auto;
  word-break: break-word;
}

// Placeholder
$pseudo-phprefix: "::-webkit-input-placeholder" ":-moz-placeholder" ":-ms-input-placeholder" "::placeholder";

$ph-styles: (font-style: normal, font-weight: normal, letter-spacing: normal, line-height: normal, text-align: inherit, text-decoration: inherit, padding: 0);

// @mixin placeholder-theme($styles) {
//   @each $pseudo in $pseudo-phprefix {

//     @at-root #{&}#{$pseudo} {

//       @each $key, $value in $styles {
//         #{$key}: #{$value};
//       }
//     }

//   }
// }

// @mixin placeholder {
//   @each $pseudo in $pseudo-phprefix {

//     @at-root #{&}#{$pseudo} {
//       @content
//     }

//   }
// }

// bourbon buttons

@mixin button($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {
  @if type-of($style) == string and type-of($base-color) == color {
    @include buttonstyle($style, $base-color, $text-size, $padding);
  }

  @if type-of($style) == string and type-of($base-color) == number {
    $padding: $text-size;
    $text-size: $base-color;
    $base-color: #4294f0;

    @if $padding == inherit {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-color, $text-size, $padding);
  }

  @if type-of($style) == color and type-of($base-color) == color {
    $base-color: $style;
    $style: simple;

    @include buttonstyle($style, $base-color, $text-size, $padding);
  }

  @if type-of($style) == color and type-of($base-color) == number {
    $padding: $text-size;
    $text-size: $base-color;
    $base-color: $style;
    $style: simple;

    @if $padding == inherit {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-color, $text-size, $padding);
  }

  @if type-of($style) == number {
    $padding: $base-color;
    $text-size: $style;
    $base-color: #4294f0;
    $style: simple;

    @if $padding == #4294f0 {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-color, $text-size, $padding);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

// Selector Style Button
@mixin buttonstyle($type, $b-color, $t-size, $pad) {
  // Grayscale button
  @if $type == simple and $b-color == grayscale($b-color) {
    @include simple($b-color, true, $t-size, $pad);
  }

  @if $type == shiny and $b-color == grayscale($b-color) {
    @include shiny($b-color, true, $t-size, $pad);
  }

  @if $type == pill and $b-color == grayscale($b-color) {
    @include pill($b-color, true, $t-size, $pad);
  }

  @if $type == flat and $b-color == grayscale($b-color) {
    @include flat($b-color, true, $t-size, $pad);
  }

  // Colored button
  @if $type == simple {
    @include simple($b-color, false, $t-size, $pad);
  }

  @else if $type == shiny {
    @include shiny($b-color, false, $t-size, $pad);
  }

  @else if $type == pill {
    @include pill($b-color, false, $t-size, $pad);
  }

  @else if $type == flat {
    @include flat($b-color, false, $t-size, $pad);
  }
}

// Simple Button
@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {
  $color: hsl(0, 0, 100%);
  $border: adjust-color($base-color, $saturation: 9%, $lightness: -14%);
  $inset-shadow: adjust-color($base-color, $saturation: -8%, $lightness: 15%);
  $stop-gradient: adjust-color($base-color, $saturation: 9%, $lightness: -11%);
  $text-shadow: adjust-color($base-color, $saturation: 15%, $lightness: -18%);

  @if is-light($base-color) {
    $color: hsl(0, 0, 20%);
    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);
  }

  @if $grayscale == true {
    $border: grayscale($border);
    $inset-shadow: grayscale($inset-shadow);
    $stop-gradient: grayscale($stop-gradient);
    $text-shadow: grayscale($text-shadow);
  }

  @include linear-gradient($base-color, $stop-gradient);

  background-clip: padding-box;
  border: 1px solid $border;
  border-radius: 3px;
  box-shadow: inset 0 1px 0 0 $inset-shadow;
  color: $color;
  display: inline-block;
  font-size: $textsize;
  font-weight: bold;
  padding: $padding;
  text-decoration: none;
  text-shadow: 0 1px 0 $text-shadow;

  &:hover:not(:disabled) {
    $base-color-hover: adjust-color($base-color, $saturation: -4%, $lightness: -5%);
    $inset-shadow-hover: adjust-color($base-color, $saturation: -7%, $lightness: 5%);
    $stop-gradient-hover: adjust-color($base-color, $saturation: 8%, $lightness: -14%);

    @if $grayscale == true {
      $base-color-hover: grayscale($base-color-hover);
      $inset-shadow-hover: grayscale($inset-shadow-hover);
      $stop-gradient-hover: grayscale($stop-gradient-hover);
    }

    @include linear-gradient($base-color-hover, $stop-gradient-hover);

    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;
    cursor: pointer;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    $border-active: adjust-color($base-color, $saturation: 9%, $lightness: -14%);
    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);

    @if $grayscale == true {
      $border-active: grayscale($border-active);
      $inset-shadow-active: grayscale($inset-shadow-active);
    }

    border: 1px solid $border-active;
    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;
  }
}
